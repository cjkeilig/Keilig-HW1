<script>window.onload =  function() {
  var nS = $('.nS').toArray();
  var sN = $('.sN').toArray();
  var aN = $('.aN').toArray();
  var pP = $('.pP').toArray();
  var rV = $('.rV').toArray();
  var sTotal = 0;
  var aTotal = 0;
  var data = [];
  for(var i in nS) {
    console.log(parseInt(pP[i].innerText));
    sTotal += 
     data.push({"investment": sN[i].innerText, "value" : parseInt(nS[i].innerText,10) * parseInt(pP[i].innerText,10)});
  }
  for(var i in rV) {
    aTotal += parseInt(rV[i].innerText,10);
    data.push({"investment": aN[i].innerText, "value" : parseInt(rV[i].innerText,10)});
  };
  console.log(data);
  var colors = ["#ff0000", "#ff4000", "#ff8000", "#ffbf00","#ffff00","#bfff00","#80ff00","#40ff00", "#00ff00","#00ff40","#00ff80","#00ffbf","#00ffff","#00bfff","#0080ff","#0040ff","#0000ff","#4000ff","#8000ff","#bf00ff","#cc00ff","#ff00ff"];
  var width = 300,
	height = 300,
	radius = Math.min(width, height) / 2;
	var color = d3.scaleOrdinal()
	.range(colors);
	var pie = d3.pie()
	
	.value(function(d) { return d.value; })(data);
	
	var arc = d3.arc()
	.outerRadius(radius - 10)
	.innerRadius(0);
	
  var labelArc = d3.arc()
	.outerRadius(radius - 40)
	.innerRadius(radius - 40);
	
	var svg = d3.select("#piesvg")
	.append("svg")
	.attr("width", width)
	.attr("height", height)
		.append("g")
		.attr("transform", "translate(" + width/2 + "," + height/2 +")");
	
	var g = svg.selectAll("arc")
	.data(pie)
	.enter().append("g")
	.attr("class", "arc");
	
	g.append("path")
	.attr("d", arc)
	.style("fill", function(d) { return color(d.data.value);});
	// Credit to Chuck Grimmett
	g.append("text")
	.attr("transform", function(d) { return "translate(" + labelArc.centroid(d) + ")"; })
	.text(function(d) { return d.data.investment;})	
	.style("fill", "#fff");
	

		
	var sS = $(".sS").toArray();
	var pD = $(".pD").toArray();
	
	 // set the dimensions and margins of the graph
  var margin = {top:30,right:20,bottom:30,left:50}
    width = 960-margin.left-margin.right;
    height = 500-margin.top-margin.bottom

  // parse the date / time
  var parseTime = d3.timeParse("%y-%b-%d");

  // set the ranges
  var x = d3.scaleTime().range([0, width]);
  var y = d3.scaleLinear().range([height, 0]);

  // define the line
  var valueline = d3.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.close); });

  // append the svg obgect to the body of the page
  // appends a 'group' element to 'svg'
  // moves the 'group' element to the top left margin
  var svg = d3.select("#chartsvg").append("svg")
    .attr("width", width + margin.left + margin.bottom)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");

// Get the data
function chart(i) {
  d3.select("#chartsvg svg").remove();
  var svg = d3.select("#chartsvg").append("svg")
    .attr("width", width + margin.left + margin.bottom)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");
  

  var data = []
  $.ajax({
  	    dataType: 'jsonp',
        url: 'http://dev.markitondemand.com/MODApis/Api/Timeseries/jsonp?symbol=' + sS[i].innerText +'&duration=' + Math.ceil(Math.abs(new Date(pD[i].innerText).getTime() - new Date().getTime())/(1000*3600*24)),
        async: true,
        success: function mine(json) {
          console.log(json.Data); 
          var dates = json.Data.SeriesDates;
          var values = json.Data.Series.open.values;
          for(i in dates) {
            data.push({"date":(new Date(dates[i])).toISOString(),"close":values[i]});
          }
          // format the data
          data.forEach(function(d) {
              d.date = new Date(d.date);
              d.close = +d.close;
          });
          svg.append("text")
            .attr("x", (width / 2))             
            .attr("y", 0 - (margin.top / 2))
            .attr("text-anchor", "middle")  
            .style("font-size", "16px") 
            .style("text-decoration", "underline")  
            .text(json.Data.Name);
          // Scale the range of the data
          x.domain(d3.extent(data, function(d) { return d.date; }));
          y.domain([0, d3.max(data, function(d) { return d.close; })]);
        
          // Add the valueline path.
          svg.append("path")
              .data([data])
              .attr("class", "line")
              .attr("d", valueline)
              .style("stroke", "steelblue")
        
          // Add the X Axis
          svg.append("g")
              .attr("transform", "translate(0," + height + ")")
              .call(d3.axisBottom(x));
        
          // Add the Y Axis
          svg.append("g")
              .call(d3.axisLeft(y));
        
              }
      });
 }
 var graphElms = document.getElementsByClassName('graphData');
 for(var i=0; i<graphElms.length;i++) {
            graphElms[i].addEventListener("click", function(event) {
              chart($(event.target).attr('value'));
            });
  }
}

</script>
<div class="card card-outline-primary"><h1><%=cust.name%></h1></div>
<div id="piesvg"></div>
<div class="card card-outline-primary">
<table class="table table-hover">
  <thead>
    <tr>
      <th>Symbol</th>
      <th>Name</th>
      <th>Number of Shares</th>
      <th>Purchase Price</th>
      <th>Purchase Date</th>
    </tr>
  </thead>
  <tbody>

<% for(var prop in cust.stocks) { %> 
  <% if(typeof(cust.stocks[prop])=="function"){continue;} %>
  <tr>
    <td class="sS"><%=cust.stocks[prop].symbol%>
    </td>
    <td class="sN">
    <%=cust.stocks[prop].name%>
    </td>
    <td class="nS">
    <%=cust.stocks[prop].numshares%>
    </td>
    <td class="pP">
    <%=cust.stocks[prop].purchasePrice%>
    </td>
    <td class="pD">
    <%=cust.stocks[prop].purchaseDate%>
    </td>
    <td><a href="destroyStock?id=<%=cust.stocks[prop].id%>&custid=<%=cust.id%>"><span class="glyphicon glyphicon-trash"></span></a>
        <a><span id="edit" value="<%=JSON.stringify(cust.stocks[prop])%>" class="glyphicon glyphicon-edit stockEdits"></span></a>
        <a><span value="<%=prop%>" class="glyphicon glyphicon-picture graphData"></span></a>
    </td>
  </tr><% } %>
  </tbody>
</table>
<table class="table table-hover">
  <thead>
    <tr>
      <th>Category</th>
      <th>Description</th>
      <th>Acquired Value</th>
      <th>Acquired Date</th>
      <th>Recent Value</th>
      <th>Recent Date</th>
    </tr>
  </thead>
  <tbody>

  <% for(var prop in cust.assets) { %> 
    <% if(typeof(cust.assets[prop])=="function"){continue;} %>
    <tr>
      <td><%=cust.assets[prop].category%></td>
      <td class="aN"><%=cust.assets[prop].description%></td>
      <td><%=cust.assets[prop].acquiredValue%></td>
      <td><%=cust.assets[prop].acquiredDate%></td>
      <td class="rV"><%=cust.assets[prop].recentValue%></td>
      <td><%=cust.assets[prop].recentDate%></td>
      <td><a href="destroyAsset?id=<%=cust.assets[prop].id%>&custid=<%=cust.id%>"><span class="glyphicon glyphicon-trash"></a></span>
          <a><span value="<%=JSON.stringify(cust.assets[prop])%>" class="glyphicon glyphicon-edit assetEdits"></span></a>
      </td>
    </tr><% } %>
  </tbody>
</table>
</div>
<script>var sElms = document.getElementsByClassName('stockEdits');
        for(var i=0; i<sElms.length;i++) {
          sElms[i].addEventListener("click", function() {
            document.getElementById("editStock").style.display='block';
            var sto = JSON.parse(this.getAttribute("value"));
            document.getElementById("symbol").value = sto.symbol;
            document.getElementById("name").value = sto.name;
            document.getElementById("numshares").value = sto.numshares;
            document.getElementById("purchasePrice").value = sto.purchasePrice;
            document.getElementById("purchaseDate").value = sto.purchaseDate;
            document.getElementById("sid").value = sto.id;
          });
        }
        var aElms = document.getElementsByClassName('assetEdits');
        for(var i=0;i<aElms.length; i++) {
          aElms[i].addEventListener("click", function() {
            document.getElementById("editAsset").style.display='block';
            var sto = JSON.parse(this.getAttribute("value"));
            document.getElementById("category").value = sto.category;
            document.getElementById("description").value = sto.description;
            document.getElementById("acquiredDate").value = sto.acquiredDate;
            document.getElementById("acquiredValue").value = sto.acquiredValue;
            document.getElementById("recentDate").value = sto.recentDate;
            document.getElementById("recentValue").value = sto.recentValue;
            document.getElementById("aid").value = sto.id;
            });
        }
</script>
<div class="card card-outline-primary">
<div class="btn-group">
  <button id="addS" type="button" class="btn btn-primary">Add Stock</button>
  <button id="addA" type="button" class="btn btn-primary">Add Asset</button>
</div>
<script>
  document.getElementById('addS').onclick = function() {
    console.log("click!!");
    document.getElementById('createAsset').style.display='none';
    document.getElementById('createStock').style.display='block';
  };
  document.getElementById('addA').onclick = function(){
    console.log("click!");
    document.getElementById('createStock').style.display='none';
    document.getElementById('createAsset').style.display='block';
  };
</script>
<div id="chartsvg"></div>
<form id="createStock" class="form-horizontal" role="form" action="createStock" style="display:none">
  <h2>Create Stock</h2>
  <div class="form-group">
    <label class="control-label col-sm-2" for="symbol">
      Symbol
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="text" name="symbol" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="name">
      Name
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="text" name="name" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="numshares">
      Number of shares
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="number" name="numshares" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="purchasePrice">
      Purchase Price
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="text" name="purchasePrice" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="purchaseDate">
      Purchase Date
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="date" name="purchaseDate" required>
    </div>
  </div>
  <input type="hidden" value=<%=cust['id']%> name="owner" required>
  <a class="btn btn-default pull-right" href="/customer/stock?id=<%=cust.id%>">Cancel</a>
  <input class="btn btn-default pull-right" type="submit">
</form>
<form id="createAsset" class="form-horizontal" role="form" action="createAsset" style="display:none">
  <h2>Create Asset</h2>
  <div class="form-group">
    <label class="control-label col-sm-2" for="category">
      Category
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="text" name="category" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="description">
      Description
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="text" name="description" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="acquiredDate">
      Date Acquired
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="text" name="acquiredDate" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="acquiredValue">
      Acquired Value
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="text" name="acquiredValue" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="recentDate">
      Recent Date
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="text" name="recentDate" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="recentValue">
      Recent Value
    </label>
    <div class="col-sm-10">
      <input class="form-control" type="text" name="recentValue" required>
    </div>
  </div>
  <input type="hidden" value="<%=cust['id']%>" name="owner" required>
  <a class="btn btn-default pull-right" href="/customer/stock?id=<%=cust.id%>">Cancel</a>
  <input class="btn btn-default pull-right" type="submit">
</form>
<form id="editStock" class="form-horizontal" role="form" action="editStock" style="display:none">
  <h2>Edit Stock</h2>
  <div class="form-group">
    <label class="control-label col-sm-2" for="symbol">
      Symbol
    </label>
    <div class="col-sm-10">
      <input id="symbol" class="form-control" type="text" name="symbol" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="name">
      Name
    </label>
    <div class="col-sm-10">
      <input id="name" class="form-control" type="text" name="name" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="numshares">
      Number of shares
    </label>
    <div class="col-sm-10">
      <input id="numshares" class="form-control" type="number" name="numshares" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="purchasePrice">
      Purchase Price
    </label>
    <div class="col-sm-10">
      <input id="purchasePrice" class="form-control" type="text" name="purchasePrice" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="purchaseDate">
      Purchase Date
    </label>
    <div class="col-sm-10">
      <input id="purchaseDate" class="form-control" type="text" name="purchaseDate" required>
    </div>
  </div>
  <input type="hidden" value=<%=cust['id']%> name="owner" required>
  <input type="hidden" id="sid" name="id" required>
  <a class="btn btn-default pull-right" href="/customer/stock?id=<%=cust.id%>">Cancel</a>
  <input class="btn btn-default pull-right" type="submit">
</form>
<form id="editAsset" class="form-horizontal" role="form" action="editAsset" style="display:none">
  <h2>Edit Asset</h2>
  <div class="form-group">
    <label class="control-label col-sm-2" for="category">
      Category
    </label>
    <div class="col-sm-10">
      <input id="category" class="form-control" type="text" name="category" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="description">
      Description
    </label>
    <div class="col-sm-10">
      <input id="description" class="form-control" type="text" name="description" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="acquiredDate">
      Date Acquired
    </label>
    <div class="col-sm-10">
      <input id="acquiredDate" class="form-control" type="text" name="acquiredDate" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="acquiredValue">
      Acquired Value
    </label>
    <div class="col-sm-10">
      <input id="acquiredValue" class="form-control" type="text" name="acquiredValue" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="recentDate">
      Recent Date
    </label>
    <div class="col-sm-10">
      <input id="recentDate" class="form-control" type="text" name="recentDate" required>
    </div>
  </div>
  <div class="form-group">
    <label class="control-label col-sm-2" for="recentValue">
      Recent Value
    </label>
    <div class="col-sm-10">
      <input id="recentValue" class="form-control" type="text" name="recentValue" required>
    </div>
  </div>
  <input type="hidden" value="<%=cust['id']%>" name="owner" required>
  <input type="hidden" id="aid" name="id" required>
  <a class="btn btn-default pull-right" href="/customer/stock?id=<%=cust.id%>">Cancel</a>
  <input class="btn btn-default pull-right" type="submit">
</form>

</div>

